package S3_02;

	import java.util.ArrayList;
	import java.util.Iterator;
	import java.util.List;
	
	public abstract class Valor implements Observable{
		private List<Observer> observers;
		
		public Valor(){
			observers = new ArrayList<Observer>();
		}
		
		private String nom;
		private int preu;
		
		public String getNomValor(){
			return nom;
		}

		@Override
		public void registrarObserver(Observer observer) {
			if(observer != null){
				this.observers.add(observer);
			}
		}

		@Override
		public void notificarObservers() {
			Iterator<Observer> it = observers.iterator();
			while(it.hasNext()){
				Observer observer = it.next();
				observer.actualitzar(this);
			}
		}

		@Override
		public void esborrarObserver(Observer observer) {
			if(observer != null){
				this.observers.remove(observer);
			}
		}
		
		public int getPreuValor(){
			return preu;
		}
		
		public void updateStockPrice(int updatedPrice){
			this.preu = actualitzarPreu;
			this.notificarObservers();
		}
		
		public void setNom(String nomValor){
			this.nom = nomValor;
		}
}
